<!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed" dir="ltr" data-theme="theme-default">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
    <title>Location Management - Admin Dashboard</title>
    <meta name="description" content="Manage locations efficiently" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="{{ asset('img/favicon/favicon.ico') }}" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

    <!-- Icons -->
    <link rel="stylesheet" href="{{ asset('vendor/fonts/fontawesome.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/fonts/tabler-icons.css') }}" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/core.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/theme-default.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/demo.css') }}" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/node-waves/node-waves.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-bs5/datatables.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/sweetalert2/sweetalert2.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/flatpickr/flatpickr.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/swiper/swiper.css') }}" />
    
    <style>
        .location-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }
        
        .location-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .location-image {
            height: 200px;
            object-fit: cover;
            border-radius: 8px 8px 0 0;
        }
        
        .location-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1;
        }
        
        .quick-actions {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            opacity: 0;
            transition: all 0.3s ease;
        }
        
        .location-card:hover .quick-actions {
            bottom: 10px;
            opacity: 1;
        }
        
        .gallery-view .location-card {
            margin-bottom: 30px;
        }
        
        .view-toggle-btn.active {
            background-color: #7367f0;
            color: white;
        }
        
        .location-stats {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 10px;
            background: rgba(0,0,0,0.6);
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .location-card:hover .location-stats {
            opacity: 1;
        }
        
        .table-view {
            display: none;
        }
        
        .gallery-view {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        
        .location-price {
            font-size: 1.25rem;
            font-weight: 600;
            color: #7367f0;
        }
        
        .location-capacity {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-size: 0.875rem;
            color: #6e6b7b;
        }

        /* Validation error styles */
        .is-invalid {
            border-color: #ff3e1d !important;
        }
        
        .invalid-feedback {
            color: #ff3e1d;
            font-size: 0.875em;
            display: none;
            width: 100%;
            margin-top: 0.25rem;
        }
        
        .is-invalid ~ .invalid-feedback {
            display: block;
        }
        
        /* Notifications styles */
        .menu-link {
            position: relative;
            padding: 0.75rem 1rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            transition: all 0.3s ease;
        }

        .menu-link:hover {
            background-color: #f8f9fa;
            color: #2d3748;
        }

        .menu-link .badge {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            line-height: 1;
        }

        .menu-link .menu-icon {
            font-size: 1.1rem;
            color: #6e6b7b;
            transition: all 0.3s ease;
        }

        .menu-link:hover .menu-icon {
            color: #2d3748;
        }

        .menu-link.active {
            background-color: #f8f9fa;
            color: #2d3748;
        }

        .menu-link.active .menu-icon {
            color: #2d3748;
        }

        .menu-link.active .badge {
            background-color: #7367f0;
            color: white;
        }
    </style>
</head>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- Menu -->
            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
                <div class="app-brand demo">
                    <a href="index.html" class="app-brand-link">
                        <span class="app-brand-logo demo">
                            <svg width="32" height="22" viewBox="0 0 32 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M0.00172773 0V6.85398C0.00172773 6.85398 -0.133178 9.01207 1.98092 10.8388L13.6912 21.9964L19.7809 21.9181L18.8042 9.88248L16.4951 7.17289L9.23799 0H0.00172773Z" fill="#7367F0" />
                            </svg>
                        </span>
                        <span class="app-brand-text demo menu-text fw-bold">Golden Touch</span>
                    </a>
                </div>

                <div class="menu-inner-shadow"></div>

                <ul class="menu-inner py-1">
                    <li class="menu-item">
                       
                    </li>

                    <li class="menu-item active">
                        <a href="{{ path('admin_lieu_index') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-map-pin"></i>
                            <div>Locations</div>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="{{ path('admin_notifications') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-bell"></i>
                            <div>Notifications</div>
                            <span id="unreadCountBadge" class="badge bg-danger rounded-pill ms-2">0</span>
                        </a>
                    </li>
                </ul>
            </aside>
            <!-- / Menu -->

            <!-- Layout container -->
            <div class="layout-page">
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <div class="row mb-4">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Location Management</h5>
                                        <div class="d-flex gap-2">
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-outline-primary view-toggle-btn active" data-view="gallery">
                                                    <i class="ti ti-grid-dots"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-primary view-toggle-btn" data-view="table">
                                                    <i class="ti ti-table"></i>
                                                </button>
                                            </div>
                                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#locationModal">
                                                <i class="ti ti-plus me-1"></i> Create New Location
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <!-- Gallery View -->
                                        <div class="gallery-view">
                                            {% for lieu in lieux %}
                                            <div class="col-md-4 col-lg-3">
                                                <div class="card location-card">
                                                    {% if lieu.imageUrl %}
                                                        <img src="{{ asset(lieu.imageUrl) }}" class="location-image" alt="{{ lieu.name }}">
                                                    {% else %}
                                                        <div class="location-image d-flex align-items-center justify-content-center bg-light">
                                                            <i class="ti ti-photo text-muted" style="font-size: 3rem;"></i>
                                                        </div>
                                                    {% endif %}
                                                    
                                                    {% if lieu.capacity < 5 %}
                                                        <div class="location-badge">
                                                            <span class="badge bg-danger">Limited Capacity!</span>
                                                        </div>
                                                    {% endif %}
                                                    
                                                    <div class="card-body">
                                                        <div class="d-flex justify-content-between align-items-start mb-2">
                                                            <h5 class="card-title mb-0">{{ lieu.name }}</h5>
                                                            <span class="badge bg-info rounded-pill" 
                                                                  data-bs-toggle="tooltip" 
                                                                  title="Nombre de réservations (simulé)">
                                                                {{ reservationCounts[lieu.id] ?? 0 }}
                                                            </span>
                                                        </div>
                                                        <p class="card-text text-truncate">{{ lieu.description }}</p>
                                                        <div class="d-flex justify-content-between align-items-center">
                                                            <div class="location-price">${{ lieu.price }}</div>
                                                            <div class="location-capacity">
                                                                <i class="ti ti-users"></i> {{ lieu.capacity }}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="location-stats">
                                                        <div class="row g-0 text-center">
                                                            <div class="col">
                                                                <div class="h6 mb-0">{{ lieu.location }}</div>
                                                                <small>Address</small>
                                                            </div>
                                                            <div class="col">
                                                                <div class="h6 mb-0">{{ lieu.ville }}</div>
                                                                <small>City</small>
                                                            </div>
                                                            <div class="col">
                                                                <div class="h6 mb-0">{{ lieu.category }}</div>
                                                                <small>Category</small>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="quick-actions">
                                                        <div class="btn-group shadow">
                                                            <button type="button" class="btn btn-primary btn-sm" onclick="editLocation({{ lieu.id }})">
                                                                <i class="ti ti-edit"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-primary btn-sm" onclick="viewLocationDetails({{ lieu.id }})">
                                                                <i class="ti ti-eye"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteLocation({{ lieu.id }})">
                                                                <i class="ti ti-trash"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            {% endfor %}
                                        </div>
                                        
                                        <!-- Table View -->
                                        <div class="table-view">
                                            <table id="locationsTable" class="table table-hover dt-responsive nowrap w-100">
                                                <thead>
                                                    <tr>
                                                        <th>Image</th>
                                                        <th>Name</th>
                                                        <th>Description</th>
                                                        <th>Price</th>
                                                        <th>Capacity</th>
                                                        <th>Address</th>
                                                        <th>City</th>
                                                        <th>Category</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    {% for lieu in lieux %}
                                                    <tr>
                                                        <td>
                                                            {% if lieu.imageUrl %}
                                                                <img src="{{ asset('uploads/lieux/' ~ lieu.imageUrl) }}" class="rounded" width="40" height="40" style="object-fit: cover;" alt="{{ lieu.name }}">
                                                            {% else %}
                                                                <i class="ti ti-photo text-muted"></i>
                                                            {% endif %}
                                                        </td>
                                                        <td>{{ lieu.name }}</td>
                                                        <td>{{ lieu.description }}</td>
                                                        <td>${{ lieu.price }}</td>
                                                        <td>
                                                            <span class="badge bg-label-primary">{{ lieu.capacity }} spots</span>
                                                        </td>
                                                        <td>{{ lieu.location }}</td>
                                                        <td>{{ lieu.ville }}</td>
                                                        <td>{{ lieu.category }}</td>
                                                        <td>
                                                            <div class="d-flex gap-2">
                                                                <button type="button" class="btn btn-sm btn-icon btn-primary" 
                                                                        onclick="editLocation({{ lieu.id }})"
                                                                        data-bs-toggle="tooltip" 
                                                                        data-bs-placement="top" 
                                                                        title="Edit">
                                                                    <i class="ti ti-edit"></i>
                                                                </button>
                                                                <button type="button" class="btn btn-sm btn-icon btn-danger"
                                                                        onclick="deleteLocation({{ lieu.id }})"
                                                                        data-bs-toggle="tooltip"
                                                                        data-bs-placement="top"
                                                                        title="Delete">
                                                                    <i class="ti ti-trash"></i>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    {% endfor %}
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Location Modal (used for both create and edit) -->
    <div class="modal fade" id="locationModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Create New Location</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- Form with novalidate attribute -->
                <form id="locationForm" enctype="multipart/form-data" novalidate>
                    <input type="hidden" id="locationId" name="id">
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="name" class="form-label">Name *</label>
                                <input type="text" class="form-control" id="name" name="name">
                                <div class="invalid-feedback" id="nameError">
                                    Please provide a valid name (3-255 characters).
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="price" class="form-label">Price *</label>
                                <input type="number" step="0.01" class="form-control" id="price" name="price">
                                <div class="invalid-feedback" id="priceError">
                                    Please provide a valid price (positive number).
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="description" class="form-label">Description *</label>
                            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                            <div class="invalid-feedback" id="descriptionError">
                                Please provide a description (10-2000 characters).
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="capacity" class="form-label">Capacity *</label>
                                <input type="number" class="form-control" id="capacity" name="capacity">
                                <div class="invalid-feedback" id="capacityError">
                                    Please provide a valid capacity (1-1000).
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="category" class="form-label">Category *</label>
                                <select class="form-select" id="category" name="category">
                                    <option value="">Select a category</option>
                                    <option value="Conference Room">Conference Room</option>
                                    <option value="Event Space">Event Space</option>
                                    <option value="Coworking">Coworking</option>
                                    <option value="Office">Office</option>
                                </select>
                                <div class="invalid-feedback" id="categoryError">
                                    Please select a category.
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label for="location" class="form-label">Address *</label>
                                <input type="text" class="form-control" id="location" name="location">
                                <div class="invalid-feedback" id="locationError">
                                    Please provide a valid address (5-255 characters).
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label for="ville" class="form-label">City</label>
                                <input type="text" class="form-control" id="ville" name="ville">
                                <div class="invalid-feedback" id="villeError">
                                    City name is too long (max 100 characters).
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="lieuImage" class="form-label">Location Image</label>
                            <input type="file" class="form-control" id="lieuImage" name="lieuImage" 
                                   accept="image/jpeg,image/png,image/gif,image/webp"
                                   data-max-size="5242880">
                            <small class="text-muted">Accepted formats: JPEG, PNG, GIF, WebP (Max 5MB)</small>
                            <div class="invalid-feedback" id="imageError">
                                Please provide a valid image file (max 5MB).
                            </div>
                            <div id="currentImageContainer" class="mt-2" style="display: none;">
                                <small>Current Image:</small>
                                <img id="currentImagePreview" src="" class="img-thumbnail mt-1" style="max-height: 100px;">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Location</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Core JS -->
    <script src="{{ asset('vendor/libs/jquery/jquery.js') }}"></script>
    <script src="{{ asset('vendor/libs/popper/popper.js') }}"></script>
    <script src="{{ asset('vendor/js/bootstrap.js') }}"></script>
    <script src="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>
    <script src="{{ asset('vendor/libs/node-waves/node-waves.js') }}"></script>
    <script src="{{ asset('vendor/libs/hammer/hammer.js') }}"></script>
    <script src="{{ asset('vendor/js/menu.js') }}"></script>
    
    <!-- Vendors JS -->
    <script src="{{ asset('vendor/libs/datatables-bs5/datatables-bootstrap5.js') }}"></script>
    <script src="{{ asset('vendor/libs/sweetalert2/sweetalert2.js') }}"></script>
    <script src="{{ asset('vendor/libs/flatpickr/flatpickr.js') }}"></script>
    <script src="{{ asset('vendor/libs/swiper/swiper.js') }}"></script>
    
    <script>
    $(document).ready(function() {
        // Initialize DataTable
        const locationsTable = $('#locationsTable').DataTable({
            dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
            responsive: true,
            order: [[0, 'desc']],
            pageLength: 10,
            language: {
                sLengthMenu: '_MENU_',
                search: '',
                searchPlaceholder: 'Search Locations'
            }
        });

        // Initialize tooltips
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
        
        // View toggle functionality
        $('.view-toggle-btn').click(function() {
            const view = $(this).data('view');
            $('.view-toggle-btn').removeClass('active');
            $(this).addClass('active');
            
            if (view === 'gallery') {
                $('.gallery-view').show();
                $('.table-view').hide();
            } else {
                $('.gallery-view').hide();
                $('.table-view').show();
            }
        });
        
        // Modal show event handler
        $('#locationModal').on('show.bs.modal', function(e) {
            // Only reset form when opened from the "Create New Location" button
            if (e.relatedTarget && e.relatedTarget.classList.contains('btn-primary')) {
                $('#modalTitle').text('Create New Location');
                $('#locationForm')[0].reset();
                $('#locationId').val('');
                $('#currentImageContainer').hide();
                // Clear validation errors
                $('.is-invalid').removeClass('is-invalid');
                $('.invalid-feedback').hide();
            }
        });
        
        // Enhanced client-side form validation
        function validateForm() {
            let isValid = true;
            
            // Helper function to validate field
            function validateField(selector, validationFn, errorMsg) {
                const field = $(selector);
                const value = field.val().trim();
                if (!validationFn(value)) {
                    field.addClass('is-invalid');
                    $(`#${field.attr('id')}Error`).text(errorMsg).show();
                    isValid = false;
                } else {
                    field.removeClass('is-invalid');
                }
            }

            // Validate name (3-255 chars)
            validateField(
                '#name', 
                val => val.length >= 3 && val.length <= 255,
                'Name must be between 3-255 characters'
            );

            // Validate price (positive number)
            validateField(
                '#price',
                val => {
                    const num = parseFloat(val);
                    return !isNaN(num) && num >= 0 && num <= 999999.99;
                },
                'Price must be a positive number (max 999999.99)'
            );

            // Validate description (10-2000 chars)
            validateField(
                '#description',
                val => val.length >= 10 && val.length <= 2000,
                'Description must be between 10-2000 characters'
            );

            // Validate capacity (1-1000)
            validateField(
                '#capacity',
                val => {
                    const num = parseInt(val);
                    return !isNaN(num) && num >= 1 && num <= 1000;
                },
                'Capacity must be between 1-1000'
            );

            // Validate category (selected)
            validateField(
                '#category',
                val => val !== '',
                'Please select a category'
            );

            // Validate location (5-255 chars)
            validateField(
                '#location',
                val => val.length >= 5 && val.length <= 255,
                'Address must be between 5-255 characters'
            );

            // Validate ville (optional, max 100 chars)
            const ville = $('#ville').val().trim();
            if (ville.length > 100) {
                $('#ville').addClass('is-invalid');
                $('#villeError').text('City name is too long (max 100 characters)').show();
                isValid = false;
            } else {
                $('#ville').removeClass('is-invalid');
            }

            // Validate image (only for create)
            if (!$('#locationId').val()) {
                const imageFile = $('#lieuImage')[0].files[0];
                if (imageFile) {
                    const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];
                    const maxSize = 5 * 1024 * 1024; // 5MB
                    
                    if (!validTypes.includes(imageFile.type)) {
                        $('#lieuImage').addClass('is-invalid');
                        $('#imageError').text('Invalid file type. Only JPEG, PNG, GIF, and WebP are allowed.').show();
                        isValid = false;
                    } else if (imageFile.size > maxSize) {
                        $('#lieuImage').addClass('is-invalid');
                        $('#imageError').text('File size exceeds 5MB limit.').show();
                        isValid = false;
                    } else {
                        $('#lieuImage').removeClass('is-invalid');
                    }
                }
            }
            
            return isValid;
        }

        // Form submission handler
        $('#locationForm').on('submit', function(e) {
            e.preventDefault();
            
            // Reset all errors
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').hide();
            
            // Validate form
            if (!validateForm()) {
                // Scroll to first error
                $('html, body').animate({
                    scrollTop: $('.is-invalid').first().offset().top - 100
                }, 500);
                return;
            }
            
            const form = e.target;
            const formData = new FormData(form);
            const locationId = formData.get('id');
            const isUpdate = !!locationId;
            
            // For updates, ensure we're using the correct field name Symfony expects
            if (isUpdate) {
                const imageFile = formData.get('lieuImage');
                if (imageFile) {
                    formData.delete('lieuImage');
                    formData.append('lieuImage', imageFile);
                }
                // Add _method=PUT for Symfony to recognize it as a PUT request
                formData.append('_method', 'PUT');
            }

            const url = isUpdate 
                ? `/admin/lieu/${locationId}/update` 
                : '{{ path('admin_lieu_create') }}';

            // Show loading state
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Processing...';

            fetch(url, {
                method: 'POST', // Always use POST, with _method parameter for overrides
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        // Close modal and refresh page
                        const modal = bootstrap.Modal.getInstance(document.getElementById('locationModal'));
                        modal.hide();
                        location.reload();
                    });
                } else {
                    // Handle validation errors from server
                    let errorMessage = data.message || 'An error occurred';
                    if (data.errors && Object.keys(data.errors).length > 0) {
                        // Clear previous errors
                        $('.is-invalid').removeClass('is-invalid');
                        $('.invalid-feedback').hide();
                        
                        // Show new errors
                        Object.entries(data.errors).forEach(([field, errors]) => {
                            const input = $(`#${field}`);
                            const errorContainer = $(`#${field}Error`);
                            
                            if (input.length && errorContainer.length) {
                                input.addClass('is-invalid');
                                errorContainer.text(errors.join(', ')).show();
                            }
                        });
                        
                        errorMessage = 'Please correct the errors in the form.';
                    }
                    throw new Error(errorMessage);
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    html: error.message,
                    confirmButtonText: 'OK'
                });
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Save Location';
            });
        });
        
        // Real-time validation for fields
        $('input, textarea, select').on('input change', function() {
            const field = $(this);
            field.removeClass('is-invalid');
            $(`#${field.attr('id')}Error`).hide();
        });
    });

    // Edit location function
    function editLocation(id) {
        fetch(`/admin/lieu/${id}/edit`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const lieu = data.data;
                
                // Set modal title
                $('#modalTitle').text('Edit Location');
                
                // Fill form with location data
                $('#locationId').val(lieu.id);
                $('#name').val(lieu.name);
                $('#description').val(lieu.description);
                $('#price').val(lieu.price);
                $('#capacity').val(lieu.capacity);
                $('#location').val(lieu.location);
                $('#ville').val(lieu.ville);
                $('#category').val(lieu.category);
                
                // Show current image if exists
                if (lieu.imageUrl) {
                    $('#currentImageContainer').show();
                    $('#currentImagePreview').attr('src', lieu.imageUrl);
                } else {
                    $('#currentImageContainer').hide();
                }
                
                // Clear validation errors
                $('.is-invalid').removeClass('is-invalid');
                $('.invalid-feedback').hide();
                
                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('locationModal'));
                modal.show();
            } else {
                throw new Error(data.message || 'Failed to load location data');
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message,
                confirmButtonText: 'OK'
            });
        });
    }

    // Delete location
    function deleteLocation(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            customClass: {
                confirmButton: 'btn btn-primary me-3',
                cancelButton: 'btn btn-label-secondary'
            },
            buttonsStyling: false
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/lieu/${id}/delete`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        // For Symfony to recognize this as DELETE
                        'X-HTTP-Method-Override': 'DELETE'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message,
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    }
    
    // View location details function
    function viewLocationDetails(id) {
        window.location.href = `/admin/lieu/${id}/show`;
    }

    // Fetch unread notifications count
    function fetchUnreadCount() {
        fetch('{{ path('admin_notifications_count') }}')
            .then(response => response.json())
            .then(data => {
                const badge = document.getElementById('unreadCountBadge');
                badge.textContent = data.count;
                if (data.count === 0) {
                    badge.style.display = 'none';
                } else {
                    badge.style.display = 'inline';
                }
            })
            .catch(error => {
                console.error('Error fetching unread count:', error);
            });
    }

    // Check for new notifications every 30 seconds
    setInterval(fetchUnreadCount, 30000);

    // Initial fetch
    fetchUnreadCount();
</script>
</body>
</html>