<!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed" dir="ltr" data-theme="theme-default">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
    <title>Location Details - Admin Dashboard</title>
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="{{ asset('img/favicon/favicon.ico') }}" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

    <!-- Icons -->
    <link rel="stylesheet" href="{{ asset('vendor/fonts/fontawesome.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/fonts/tabler-icons.css') }}" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/core.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/theme-default.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/demo.css') }}" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/node-waves/node-waves.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/swiper/swiper.css') }}" />
    
    <style>
        .location-header {
            position: relative;
            background-size: cover;
            background-position: center;
            height: 300px;
            border-radius: 0.5rem;
            overflow: hidden;
        }
        
        .location-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(to bottom, rgba(0,0,0,0.1), rgba(0,0,0,0.7));
        }
        
        .location-header-content {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 2rem;
            color: white;
        }
        
        .location-stat-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .location-stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .location-description {
            font-size: 1.1rem;
            line-height: 1.6;
            color: #6e6b7b;
        }
        
        .location-details {
            background: #f8f8f8;
            border-radius: 0.5rem;
            padding: 1.5rem;
        }
        
        .timeline-item {
            position: relative;
            padding-left: 3rem;
            margin-bottom: 2rem;
        }
        
        .timeline-item::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 2px;
            background: #e0e0e0;
        }
        
        .timeline-point {
            position: absolute;
            left: -6px;
            width: 14px;
            height: 14px;
            border-radius: 50%;
            background: #7367f0;
            border: 2px solid white;
        }
    </style>
</head>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- Menu -->
            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
                <div class="app-brand demo">
                    <a href="index.html" class="app-brand-link">
                        <span class="app-brand-logo demo">
                            <svg width="32" height="22" viewBox="0 0 32 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M0.00172773 0V6.85398C0.00172773 6.85398 -0.133178 9.01207 1.98092 10.8388L13.6912 21.9964L19.7809 21.9181L18.8042 9.88248L16.4951 7.17289L9.23799 0H0.00172773Z" fill="#7367F0" />
                            </svg>
                        </span>
                        <span class="app-brand-text demo menu-text fw-bold">Golden Touch</span>
                    </a>
                </div>

                <div class="menu-inner-shadow"></div>

                <ul class="menu-inner py-1">
                    <li class="menu-item">
                        <a href="{{ path('admin_lieu_index') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-map-pin"></i>
                            <div>Locations</div>
                        </a>
                    </li>
                </ul>
            </aside>
            <!-- / Menu -->

            <!-- Layout container -->
            <div class="layout-page">
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <!-- Breadcrumb -->
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <div>
                                <h4 class="fw-bold mb-2">Location Details</h4>
                                <nav aria-label="breadcrumb">
                                    <ol class="breadcrumb">
                                        <li class="breadcrumb-item">
                                            <a href="{{ path('admin_lieu_index') }}">Locations</a>
                                        </li>
                                        <li class="breadcrumb-item active">Details</li>
                                    </ol>
                                </nav>
                            </div>
                            <div class="d-flex gap-2">
                                <button type="button" class="btn btn-primary" onclick="editLocation({{ lieu.id }})">
                                    <i class="ti ti-edit me-1"></i> Edit Location
                                </button>
                                <button type="button" class="btn btn-danger" onclick="deleteLocation({{ lieu.id }})">
                                    <i class="ti ti-trash me-1"></i> Delete Location
                                </button>
                            </div>
                        </div>

                        <!-- Location Header -->
                        <div class="location-header mb-4" style="background-image: url('{{ asset('uploads/lieux/' ~ lieu.imageUrl) }}')">
                            <div class="location-header-content">
                                <h2 class="mb-2">{{ lieu.name }}</h2>
                                <div class="d-flex gap-3">
                                    <div class="d-flex align-items-center">
                                        <i class="ti ti-map-pin me-2"></i>
                                        <span>{{ lieu.location }}</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <i class="ti ti-users me-2"></i>
                                        <span>{{ lieu.capacity }} spots</span>
                                    </div>
                                    <div class="d-flex align-items-center">
                                        <i class="ti ti-category me-2"></i>
                                        <span>{{ lieu.category }}</span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Location Stats -->
                            <div class="col-12 col-xl-4 mb-4">
                                <div class="row">
                                    <div class="col-12 col-sm-6 col-xl-12 mb-4">
                                        <div class="card location-stat-card">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <div>
                                                        <h5 class="mb-1">Price</h5>
                                                        <h2 class="mb-0 text-primary">${{ lieu.price }}</h2>
                                                    </div>
                                                    <div class="avatar avatar-lg">
                                                        <div class="avatar-initial bg-label-primary rounded">
                                                            <i class="ti ti-currency-dollar fs-3"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-12 col-sm-6 col-xl-12 mb-4">
                                        <div class="card location-stat-card">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <div>
                                                        <h5 class="mb-1">Capacity</h5>
                                                        <h2 class="mb-0 text-success">{{ lieu.capacity }} spots</h2>
                                                    </div>
                                                    <div class="avatar avatar-lg">
                                                        <div class="avatar-initial bg-label-success rounded">
                                                            <i class="ti ti-users fs-3"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <div class="col-12">
                                        <div class="card location-stat-card">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center justify-content-between">
                                                    <div>
                                                        <h5 class="mb-1">City</h5>
                                                        <h2 class="mb-0 text-info">{{ lieu.ville }}</h2>
                                                    </div>
                                                    <div class="avatar avatar-lg">
                                                        <div class="avatar-initial bg-label-info rounded">
                                                            <i class="ti ti-building-community fs-3"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Location Details -->
                            <div class="col-12 col-xl-8">
                                <div class="card mb-4">
                                    <div class="card-header">
                                        <h5 class="mb-0">Location Description</h5>
                                    </div>
                                    <div class="card-body">
                                        <p class="location-description">{{ lieu.description }}</p>
                                    </div>
                                </div>

                                <div class="card">
                                    <div class="card-header">
                                        <h5 class="mb-0">Location Details</h5>
                                    </div>
                                    <div class="card-body">
                                        <div class="location-details">
                                            <div class="timeline-item">
                                                <div class="timeline-point"></div>
                                                <h6 class="mb-1">Address</h6>
                                                <p class="mb-0">{{ lieu.location }}</p>
                                            </div>
                                            
                                            <div class="timeline-item">
                                                <div class="timeline-point"></div>
                                                <h6 class="mb-1">City</h6>
                                                <p class="mb-0">{{ lieu.ville }}</p>
                                            </div>
                                            
                                            <div class="timeline-item">
                                                <div class="timeline-point"></div>
                                                <h6 class="mb-1">Category</h6>
                                                <p class="mb-0">{{ lieu.category }}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Location Modal -->
    <div class="modal fade" id="locationModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Edit Location</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="locationForm" enctype="multipart/form-data">
                    <div class="modal-body">
                        <input type="hidden" id="locationId" name="id">
                        <div class="mb-3">
                            <label class="form-label" for="name">Name</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="description">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="price">Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="price" name="price" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="capacity">Capacity</label>
                                <input type="number" class="form-control" id="capacity" name="capacity" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="location">Address</label>
                                <input type="text" class="form-control" id="location" name="location" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="ville">City</label>
                                <input type="text" class="form-control" id="ville" name="ville" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="category">Category</label>
                                <input type="text" class="form-control" id="category" name="category" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="imageUrl">Image</label>
                                <input type="file" class="form-control" id="imageUrl" name="imageUrl">
                                <small class="text-muted">Leave empty to keep current image</small>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-label-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Core JS -->
    <script src="{{ asset('vendor/libs/jquery/jquery.js') }}"></script>
    <script src="{{ asset('vendor/libs/popper/popper.js') }}"></script>
    <script src="{{ asset('vendor/js/bootstrap.js') }}"></script>
    <script src="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>
    <script src="{{ asset('vendor/libs/node-waves/node-waves.js') }}"></script>
    <script src="{{ asset('vendor/libs/hammer/hammer.js') }}"></script>
    <script src="{{ asset('vendor/js/menu.js') }}"></script>
    <script src="{{ asset('vendor/libs/sweetalert2/sweetalert2.js') }}"></script>

    <script>
    $(document).ready(function() {
        // Initialize the form submission
        $('#locationForm').on('submit', function(e) {
            e.preventDefault();
            
            const form = e.target;
            const formData = new FormData(form);
            const locationId = formData.get('id');
            const isUpdate = !!locationId;
            
            // For updates, ensure we're using the correct field name Symfony expects
            if (isUpdate) {
                const imageFile = formData.get('imageUrl');
                if (imageFile && imageFile.name) {
                    formData.delete('imageUrl');
                    formData.append('lieuImage', imageFile);
                }
                // Add _method=PUT for Symfony to recognize it as a PUT request
                formData.append('_method', 'PUT');
            }

            const url = `/admin/lieu/${locationId}/update`;

            // Show loading state
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm me-1" role="status" aria-hidden="true"></span> Processing...';

            fetch(url, {
                method: 'POST', // Always use POST, with _method parameter for overrides
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        // Close modal and refresh page
                        const modal = bootstrap.Modal.getInstance(document.getElementById('locationModal'));
                        modal.hide();
                        location.reload();
                    });
                } else {
                    // Handle validation errors
                    let errorMessage = data.message || 'An error occurred';
                    if (data.errors && data.errors.length > 0) {
                        errorMessage += '<ul class="text-start">';
                        data.errors.forEach(error => {
                            errorMessage += `<li>${error}</li>`;
                        });
                        errorMessage += '</ul>';
                    }
                    throw new Error(errorMessage);
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    html: error.message,
                    confirmButtonText: 'OK'
                });
            })
            .finally(() => {
                submitBtn.disabled = false;
                submitBtn.textContent = 'Save changes';
            });
        });
    });

    // Edit location function - matches the implementation from index
    function editLocation(id) {
        fetch(`/admin/lieu/${id}/edit`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const lieu = data.data;
                
                // Set modal title
                $('#modalTitle').text('Edit Location');
                
                // Fill form with location data
                $('#locationId').val(lieu.id);
                $('#name').val(lieu.name);
                $('#description').val(lieu.description);
                $('#price').val(lieu.price);
                $('#capacity').val(lieu.capacity);
                $('#location').val(lieu.location);
                $('#ville').val(lieu.ville);
                $('#category').val(lieu.category);
                
                // Show modal
                const modal = new bootstrap.Modal(document.getElementById('locationModal'));
                modal.show();
            } else {
                throw new Error(data.message || 'Failed to load location data');
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: error.message,
                confirmButtonText: 'OK'
            });
        });
    }

    // Delete location - also updated to match the index implementation
    function deleteLocation(id) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, delete it!',
            customClass: {
                confirmButton: 'btn btn-primary me-3',
                cancelButton: 'btn btn-label-secondary'
            },
            buttonsStyling: false
        }).then((result) => {
            if (result.isConfirmed) {
                fetch(`/admin/lieu/${id}/delete`, {
                    method: 'POST',
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest',
                        // For Symfony to recognize this as DELETE
                        'X-HTTP-Method-Override': 'DELETE'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: data.message,
                            showConfirmButton: false,
                            timer: 1500
                        }).then(() => {
                            window.location.href = '/admin/lieu';
                        });
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message,
                        confirmButtonText: 'OK'
                    });
                });
            }
        });
    }
</script>
</body>
</html>