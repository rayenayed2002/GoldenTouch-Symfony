<!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed" dir="ltr" data-theme="theme-default">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
    <title>Pack Management - Admin Dashboard</title>
    <meta name="description" content="Manage event packs efficiently" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="{{ asset('img/favicon/favicon.ico') }}" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Public+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

    <!-- Icons -->
    <link rel="stylesheet" href="{{ asset('vendor/fonts/fontawesome.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/fonts/tabler-icons.css') }}" />

    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/core.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/theme-default.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/demo.css') }}" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/node-waves/node-waves.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-bs5/datatables.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-responsive-bs5/responsive.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/datatables-buttons-bs5/buttons.bootstrap5.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/sweetalert2/sweetalert2.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/flatpickr/flatpickr.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/swiper/swiper.css') }}" />
    
    <style>
        .pack-card {
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }
        
        .pack-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        
        .pack-image {
            height: 200px;
            object-fit: cover;
            border-radius: 8px 8px 0 0;
        }
        
        .pack-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            z-index: 1;
        }
        
        .quick-actions {
            position: absolute;
            bottom: -20px;
            left: 50%;
            transform: translateX(-50%);
            opacity: 0;
            transition: all 0.3s ease;
        }
        
        .pack-card:hover .quick-actions {
            bottom: 10px;
            opacity: 1;
        }
        
        .gallery-view .pack-card {
            margin-bottom: 30px;
        }
        
        .view-toggle-btn.active {
            background-color: #7367f0;
            color: white;
        }
        
        .pack-stats {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            padding: 10px;
            background: rgba(0,0,0,0.6);
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .pack-card:hover .pack-stats {
            opacity: 1;
        }
        
        .table-view {
            display: none;
        }
        
        .gallery-view {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
        }
        
        .pack-price {
            font-size: 1.25rem;
            font-weight: 600;
            color: #7367f0;
        }
        
        .pack-capacity {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            font-size: 0.875rem;
            color: #6e6b7b;
        }

        /* Notifications styles */
        .menu-link {
            position: relative;
            padding: 0.75rem 1rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            transition: all 0.3s ease;
        }

        .menu-link:hover {
            background-color: #f8f9fa;
            color: #2d3748;
        }

        .menu-link .badge {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            line-height: 1;
        }

        .menu-link .menu-icon {
            font-size: 1.1rem;
            color: #6e6b7b;
            transition: all 0.3s ease;
        }

        .menu-link:hover .menu-icon {
            color: #2d3748;
        }

        .menu-link.active {
            background-color: #f8f9fa;
            color: #2d3748;
        }

        .menu-link.active .menu-icon {
            color: #2d3748;
        }

        .menu-link.active .badge {
            background-color: #7367f0;
            color: white;
        }
    </style>
</head>

<body>
    <!-- Layout wrapper -->
    <div class="layout-wrapper layout-content-navbar">
        <div class="layout-container">
            <!-- Menu -->
            <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
                <div class="app-brand demo">
                    <a href="index.html" class="app-brand-link">
                        <span class="app-brand-logo demo">
                            <svg width="32" height="22" viewBox="0 0 32 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" clip-rule="evenodd" d="M0.00172773 0V6.85398C0.00172773 6.85398 -0.133178 9.01207 1.98092 10.8388L13.6912 21.9964L19.7809 21.9181L18.8042 9.88248L16.4951 7.17289L9.23799 0H0.00172773Z" fill="#7367F0" />
                            </svg>
                        </span>
                        <span class="app-brand-text demo menu-text fw-bold">Golden Touch</span>
                    </a>
                </div>

                <div class="menu-inner-shadow"></div>

                <ul class="menu-inner py-1">
                    <li class="menu-item">
                        <a href="{{ path('admin_dashboard') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-dashboard"></i>
                            <div>Dashboard</div>
                        </a>
                    </li>

                    <li class="menu-item active">
                        <a href="{{ path('admin_pack_index') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-package"></i>
                            <div>Packs</div>
                        </a>
                    </li>
                    <li class="menu-item">
                        <a href="{{ path('admin_notifications') }}" class="menu-link">
                            <i class="menu-icon tf-icons ti ti-bell"></i>
                            <div>Notifications</div>
                            <span id="unreadCountBadge" class="badge bg-danger rounded-pill ms-2">0</span>
                        </a>
                    </li>
                </ul>
            </aside>
            <!-- / Menu -->

            <!-- Layout container -->
            <div class="layout-page">
                <!-- Content wrapper -->
                <div class="content-wrapper">
                    <!-- Content -->
                    <div class="container-xxl flex-grow-1 container-p-y">
                        <div class="row mb-4">
                            <div class="col-12">
                                <div class="card">
                                    <div class="card-header d-flex justify-content-between align-items-center">
                                        <h5 class="mb-0">Pack Management</h5>
                                        <div class="d-flex gap-2">
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-outline-primary view-toggle-btn active" data-view="gallery">
                                                    <i class="ti ti-grid-dots"></i>
                                                </button>
                                                <button type="button" class="btn btn-outline-primary view-toggle-btn" data-view="table">
                                                    <i class="ti ti-table"></i>
                                                </button>
                                            </div>
                                            <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createPackModal">
                                                <i class="ti ti-plus me-1"></i> Create New Pack
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <!-- Gallery View -->
                                        <div class="gallery-view">
                                            {% for pack in packs %}
                                            <div class="col-md-4 col-lg-3">
                                                <div class="card pack-card">
                                                    {% if pack.event.photo %}
                                                        <img src="{{ asset('uploads/packs/' ~ pack.event.photo) }}" class="pack-image" alt="{{ pack.event.nom }}">
                                                    {% else %}
                                                        <div class="pack-image d-flex align-items-center justify-content-center bg-light">
                                                            <i class="ti ti-photo text-muted" style="font-size: 3rem;"></i>
                                                        </div>
                                                    {% endif %}
                                                    
                                                    {% if pack.capacite < 5 %}
                                                        <div class="pack-badge">
                                                            <span class="badge bg-danger">Limited Spots!</span>
                                                        </div>
                                                    {% endif %}
                                                    
                                                    <div class="card-body">
                                                        <h5 class="card-title">{{ pack.event.nom }}</h5>
                                                        <p class="card-text text-truncate">{{ pack.description }}</p>
                                                        <div class="d-flex justify-content-between align-items-center">
                                                            <div class="pack-price">${{ pack.prix }}</div>
                                                            <div class="pack-capacity">
                                                                <i class="ti ti-users"></i> {{ pack.capacite }}
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="pack-stats">
                                                        <div class="row g-0 text-center">
                                                            <div class="col">
                                                                <div class="h6 mb-0">{{ pack.duree }}h</div>
                                                                <small>Duration</small>
                                                            </div>
                                                            <div class="col">
                                                                <div class="h6 mb-0">{{ pack.endDate ? pack.endDate|date('M d') : 'No End' }}</div>
                                                                <small>End Date</small>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    
                                                    <div class="quick-actions">
                                                        <div class="btn-group shadow">
                                                            <button type="button" class="btn btn-primary btn-sm" onclick="editPack({{ pack.id }})">
                                                                <i class="ti ti-edit"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-primary btn-sm" onclick="viewPackDetails({{ pack.id }})">
                                                                <i class="ti ti-eye"></i>
                                                            </button>
                                                            <button type="button" class="btn btn-danger btn-sm" onclick="deletePack({{ pack.id }})">
                                                                <i class="ti ti-trash"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            {% endfor %}
                                        </div>
                                        
                                        <!-- Table View -->
                                        <div class="table-view">
                                            <table id="packsTable" class="table table-hover dt-responsive nowrap w-100">
                                                <thead>
                                                    <tr>
                                                        <th>Image</th>
                                                        <th>Event</th>
                                                        <th>Description</th>
                                                        <th>Price</th>
                                                        <th>Capacity</th>
                                                        <th>Duration</th>
                                                        <th>End Date</th>
                                                        <th>Actions</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    {% for pack in packs %}
                                                    <tr>
                                                        <td>
                                                            {% if pack.event.photo %}
                                                                <img src="{{ asset('uploads/packs/' ~ pack.event.photo) }}" class="rounded" width="40" height="40" style="object-fit: cover;" alt="{{ pack.event.nom }}">
                                                            {% else %}
                                                                <i class="ti ti-photo text-muted"></i>
                                                            {% endif %}
                                                        </td>
                                                        <td>{{ pack.event.nom }}</td>
                                                        <td>{{ pack.description }}</td>
                                                        <td>${{ pack.prix }}</td>
                                                        <td>
                                                            <span class="badge bg-label-primary">{{ pack.capacite }} spots</span>
                                                        </td>
                                                        <td>{{ pack.duree }}h</td>
                                                        <td>{{ pack.endDate ? pack.endDate|date('Y-m-d') : '' }}</td>
                                                        <td>
                                                            <div class="d-flex gap-2">
                                                                <button type="button" class="btn btn-sm btn-icon btn-primary" 
                                                                        onclick="editPack({{ pack.id }})"
                                                                        data-bs-toggle="tooltip" 
                                                                        data-bs-placement="top" 
                                                                        title="Edit">
                                                                    <i class="ti ti-edit"></i>
                                                                </button>
                                                                <button type="button" class="btn btn-sm btn-icon btn-danger"
                                                                        onclick="deletePack({{ pack.id }})"
                                                                        data-bs-toggle="tooltip"
                                                                        data-bs-placement="top"
                                                                        title="Delete">
                                                                    <i class="ti ti-trash"></i>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                    {% endfor %}
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create/Edit Pack Modal -->
    <div class="modal fade" id="packModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">Create New Pack</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="packForm" onsubmit="handlePackSubmit(event)">
                    <div class="modal-body">
                        <input type="hidden" id="packId" name="id">
                        <div class="mb-3">
                            <label class="form-label" for="event">Event</label>
                            <select class="form-select" id="event" name="event" required>
                                {% for event in events %}
                                    <option value="{{ event.id }}">{{ event.nom }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label" for="description">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3" required></textarea>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="prix">Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="prix" name="prix" step="0.01" required>
                                </div>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="capacite">Capacity</label>
                                <input type="number" class="form-control" id="capacite" name="capacite" required>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="duree">Duration (hours)</label>
                                <input type="number" class="form-control" id="duree" name="duree" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label" for="endDate">End Date</label>
                                <input type="text" class="form-control flatpickr" id="endDate" name="endDate">
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-label-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Core JS -->
    <script src="{{ asset('vendor/libs/jquery/jquery.js') }}"></script>
    <script src="{{ asset('vendor/libs/popper/popper.js') }}"></script>
    <script src="{{ asset('vendor/js/bootstrap.js') }}"></script>
    <script src="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>
    <script src="{{ asset('vendor/libs/node-waves/node-waves.js') }}"></script>
    <script src="{{ asset('vendor/libs/hammer/hammer.js') }}"></script>
    <script src="{{ asset('vendor/js/menu.js') }}"></script>
    
    <!-- Custom Pack Creation Enhancement -->
    <script src="{{ asset('js/admin-pack-create.js') }}"></script>

    <!-- Vendors JS -->
    <script src="{{ asset('vendor/libs/datatables-bs5/datatables-bootstrap5.js') }}"></script>
    <script src="{{ asset('vendor/libs/sweetalert2/sweetalert2.js') }}"></script>
    <script src="{{ asset('vendor/libs/flatpickr/flatpickr.js') }}"></script>
    <script src="{{ asset('vendor/libs/swiper/swiper.js') }}"></script>

    <script>
        $(document).ready(function() {
            // Initialize DataTable
            const packsTable = $('#packsTable').DataTable({
                dom: '<"row"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6 d-flex justify-content-center justify-content-md-end"f>>t<"row"<"col-sm-12 col-md-6"i><"col-sm-12 col-md-6"p>>',
                responsive: true,
                order: [[0, 'desc']],
                pageLength: 10,
                language: {
                    sLengthMenu: '_MENU_',
                    search: '',
                    searchPlaceholder: 'Search Packs'
                }
            });

            // Initialize Flatpickr
            flatpickr('.flatpickr', {
                dateFormat: 'Y-m-d',
                minDate: 'today'
            });

            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
            
            // View toggle functionality
            $('.view-toggle-btn').click(function() {
                const view = $(this).data('view');
                $('.view-toggle-btn').removeClass('active');
                $(this).addClass('active');
                
                if (view === 'gallery') {
                    $('.gallery-view').show();
                    $('.table-view').hide();
                } else {
                    $('.gallery-view').hide();
                    $('.table-view').show();
                }
            });
            
            // Initialize tooltips for quick action buttons
            const quickActionTooltips = [].slice.call(document.querySelectorAll('.quick-actions [data-bs-toggle="tooltip"]'));
            quickActionTooltips.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });

        // Handle form submission
        function handlePackSubmit(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);
            const packId = formData.get('id');
            const url = packId ? `{{ path('admin_pack_update', {'id': 'PACK_ID'}) }}`.replace('PACK_ID', packId)
                              : '{{ path('admin_pack_create') }}';

            // Convert FormData to JSON
            const data = {};
            formData.forEach((value, key) => {
                data[key] = value;
            });

            fetch(url, {
                method: packId ? 'PUT' : 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: data.message,
                        showConfirmButton: false,
                        timer: 1500
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error(data.message);
                }
            })
            .catch(error => {
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message,
                    confirmButtonText: 'OK'
                });
            });
        }

        // Edit pack
        function editPack(id) {
            fetch(`{{ path('admin_pack_edit', {'id': 'PACK_ID'}) }}`.replace('PACK_ID', id))
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        const pack = data.pack;
                        document.getElementById('modalTitle').textContent = 'Edit Pack';
                        document.getElementById('packId').value = pack.id;
                        document.getElementById('event').value = pack.event.id;
                        document.getElementById('description').value = pack.description;
                        document.getElementById('prix').value = pack.prix;
                        document.getElementById('capacite').value = pack.capacite;
                        document.getElementById('duree').value = pack.duree;
                        document.getElementById('endDate').value = pack.endDate;
                        
                        const modal = new bootstrap.Modal(document.getElementById('packModal'));
                        modal.show();
                    } else {
                        throw new Error(data.message);
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message,
                        confirmButtonText: 'OK'
                    });
                });
        }

        // Delete pack
        function deletePack(id) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                customClass: {
                    confirmButton: 'btn btn-primary me-3',
                    cancelButton: 'btn btn-label-secondary'
                },
                buttonsStyling: false
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(`{{ path('admin_pack_delete', {'id': 'PACK_ID'}) }}`.replace('PACK_ID', id), {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Deleted!',
                                text: data.message,
                                showConfirmButton: false,
                                timer: 1500
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            throw new Error(data.message);
                        }
                    })
                    .catch(error => {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: error.message,
                            confirmButtonText: 'OK'
                        });
                    });
                }
            });
        }
        
        // View pack details function
        function viewPackDetails(id) {
            // Implement pack details view logic
            window.location.href = `{{ path('admin_pack_show', {'id': 'PACK_ID'}) }}`.replace('PACK_ID', id);
        }

        // Fetch unread notifications count
        function fetchUnreadCount() {
            fetch('{{ path('admin_notifications_count') }}')
                .then(response => response.json())
                .then(data => {
                    const badge = document.getElementById('unreadCountBadge');
                    badge.textContent = data.count;
                    if (data.count === 0) {
                        badge.style.display = 'none';
                    } else {
                        badge.style.display = 'inline';
                    }
                })
                .catch(error => {
                    console.error('Error fetching unread count:', error);
                });
        }

        // Check for new notifications every 30 seconds
        setInterval(fetchUnreadCount, 30000);

        // Initial fetch
        fetchUnreadCount();
    </script>
</body>
</html>
