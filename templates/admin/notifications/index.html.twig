 <!DOCTYPE html>
<html lang="en" class="light-style layout-navbar-fixed layout-menu-fixed" dir="ltr" data-theme="theme-default">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0" />
    <title>Notifications - Admin</title>
    <meta name="description" content="Admin notifications" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="{{ asset('img/favicon/favicon.ico') }}" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />

    <!-- Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@tabler/icons-webfont@latest/tabler-icons.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css">

    <!-- Core CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/core.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/css/rtl/theme-default.css') }}" />
    <link rel="stylesheet" href="{{ asset('css/demo.css') }}" />

    <!-- Vendors CSS -->
    <link rel="stylesheet" href="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/node-waves/node-waves.css') }}" />
    <link rel="stylesheet" href="{{ asset('vendor/libs/sweetalert2/sweetalert2.css') }}" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" />
    
    <style>
        :root {
            --primary-color: #7367F0;
            --secondary-color: #82868b;
            --success-color: #28C76F;
            --info-color: #00CFE8;
            --warning-color: #FF9F43;
            --danger-color: #EA5455;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f8f8;
        }

        /* Sidebar styles */
        .sidebar {
            width: 260px;
            height: 100vh;
            position: fixed;
            left: 0;
            top: 0;
            background-color: #fff;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.05);
            z-index: 999;
            transition: all 0.3s ease;
            padding: 1.5rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 2rem;
        }

        .nav-button {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            border-radius: 0.5rem;
            color: var(--secondary-color);
            font-weight: 500;
            transition: all 0.3s ease;
            margin-bottom: 0.5rem;
            border: none;
            background: transparent;
            width: 100%;
            text-align: left;
            cursor: pointer;
        }

        .nav-button i {
            margin-right: 0.75rem;
            font-size: 1.25rem;
        }

        .nav-button:hover {
            background-color: rgba(115, 103, 240, 0.1);
            color: var(--primary-color);
        }

        .nav-button.active {
            background-color: var(--primary-color);
            color: white;
            box-shadow: 0 4px 8px rgba(115, 103, 240, 0.3);
        }

        .logout-button {
            margin-top: auto;
            color: var(--danger-color);
        }

        .logout-button:hover {
            background-color: rgba(234, 84, 85, 0.1);
            color: var(--danger-color);
        }

        /* Header styles */
        .header {
            height: 70px;
            background-color: #fff;
            border-bottom: 1px solid #eee;
            display: flex;
            align-items: center;
            padding: 0 2rem;
            margin-left: 260px;
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            z-index: 998;
        }

        .header-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
        }

        .profile-section {
            display: flex;
            align-items: center;
        }

        .profile-pic {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background-color: var(--primary-color);
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: 600;
            font-size: 1.2rem;
        }

        .online-status {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background-color: var(--success-color);
            border: 2px solid white;
            position: absolute;
            bottom: 0;
            right: 0;
        }

        .profile-name {
            font-weight: 600;
            margin-left: 1rem;
        }

        .profile-role {
            font-size: 0.8rem;
            color: var(--secondary-color);
            margin-left: 1rem;
        }

        /* Main content styles */
        .main-content {
            margin-left: 260px;
            padding: 2rem;
            margin-top: 70px;
        }

        /* Notification styles */
        .notification-card {
            background-color: #fff;
            border-radius: 0.75rem;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
            padding: 1.25rem;
            margin-bottom: 1rem;
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
            position: relative;
            overflow: hidden;
        }

        .notification-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        }

        .notification-card.unread {
            border-left-color: var(--primary-color);
            background-color: rgba(115, 103, 240, 0.05);
        }

        .notification-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0.75rem;
        }

        .notification-username {
            font-weight: 600;
            color: #333;
        }

        .notification-time {
            font-size: 0.8rem;
            color: var(--secondary-color);
        }

        .notification-message {
            color: #555;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .notification-actions {
            display: flex;
            justify-content: flex-end;
            gap: 0.5rem;
        }

        .action-button {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            background-color: rgba(115, 103, 240, 0.1);
            color: var(--primary-color);
        }

        .action-button:hover {
            background-color: var(--primary-color);
            color: white;
        }

        .delete-button {
            background-color: rgba(234, 84, 85, 0.1);
            color: var(--danger-color);
        }

        .delete-button:hover {
            background-color: var(--danger-color);
            color: white;
        }

        /* Filter styles */
        .filter-section {
            display: flex;
            align-items: center;
            margin-bottom: 1.5rem;
            gap: 1rem;
            flex-wrap: wrap;
        }

        .filter-dropdown {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            border: 1px solid #ddd;
            background-color: white;
            font-size: 0.875rem;
            min-width: 150px;
        }

        .secondary-button {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            border: 1px solid #ddd;
            background-color: white;
            color: var(--secondary-color);
            cursor: pointer;
        }

        .secondary-button:hover {
            background-color: #f8f8f8;
            border-color: #ccc;
        }

        .primary-button {
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            font-size: 0.875rem;
            transition: all 0.3s ease;
            border: none;
            background-color: var(--primary-color);
            color: white;
            cursor: pointer;
        }

        .primary-button:hover {
            background-color: #5e50ee;
            box-shadow: 0 4px 8px rgba(115, 103, 240, 0.3);
        }

        /* Notification count badge */
        .notification-count {
            position: absolute;
            top: 0;
            right: 0;
            background-color: var(--danger-color);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.75rem;
            font-weight: 600;
            transform: translate(50%, -50%);
        }

        /* Empty state */
        .empty-state {
            text-align: center;
            padding: 3rem 1rem;
            color: var(--secondary-color);
        }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 1rem;
            color: #ddd;
        }

        .empty-state h3 {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #555;
        }

        /* Animations */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .fade-in {
            animation: fadeIn 0.5s ease forwards;
        }

        .notification-card {
            animation: fadeIn 0.5s ease forwards;
            animation-delay: calc(var(--index) * 0.1s);
            opacity: 0;
        }

        /* Scrollbar styling */
        ::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }

        ::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #ccc;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: #999;
        }

        /* Responsive adjustments */
        @media (max-width: 992px) {
            .sidebar {
                transform: translateX(-100%);
            }
            .header, .main-content {
                margin-left: 0;
            }
            .sidebar.show {
                transform: translateX(0);
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <div class="sidebar">
        <div class="logo">GoldenTouch</div>
        <button class="nav-button" onclick="alert('Packs button clicked')">
            <i class="ti ti-package"></i> Packs
        </button>
        <button class="nav-button" onclick="alert('Gestion Événements button clicked')">
            <i class="ti ti-calendar"></i> Gestion Événements
        </button>
        <button class="nav-button" onclick="alert('Gestion Matérielle button clicked')">
            <i class="ti ti-tools"></i> Gestion Matérielle
        </button>
        <button class="nav-button" onclick="alert('Gestion Lieu button clicked')">
            <i class="ti ti-map-pin"></i> Gestion Lieu
        </button>
        <button class="nav-button" onclick="alert('Gestion Personnels button clicked')">
            <i class="ti ti-users"></i> Gestion Personnels
        </button>
        <button class="nav-button" onclick="alert('Gestion Commandes button clicked')">
            <i class="ti ti-shopping-cart"></i> Gestion Commandes
        </button>
        <button class="nav-button" onclick="alert('Compte button clicked')">
            <i class="ti ti-user"></i> Compte
        </button>
        <button class="nav-button active" onclick="alert('Notifications button clicked')">
            <i class="ti ti-bell"></i> Notifications
            {% if unreadCount > 0 %}
                <span class="notification-count">{{ unreadCount }}</span>
            {% endif %}
        </button>
        <button class="nav-button logout-button" onclick="alert('Déconnexion button clicked')">
            <i class="ti ti-logout"></i> Déconnexion
        </button>
    </div>

    <!-- Header -->
    <div class="header">
        <h1 class="header-title">Notifications</h1>
        <div style="flex-grow: 1;"></div>
        <div class="profile-section">
            <div style="position: relative;">
                <div class="profile-pic">A</div>
                <div class="online-status"></div>
            </div>
            <div>
                <div class="profile-name">Admin</div>
                <div class="profile-role">Administrator</div>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-content">
        <!-- Filter Section -->
        <div class="filter-section">
            <select id="filter-dropdown" class="filter-dropdown" onchange="window.location.href='{{ path("admin_notifications") }}?filter=' + this.value">
                <option value="all" {% if currentFilter == 'all' %}selected{% endif %}>All Notifications</option>
                <option value="unread" {% if currentFilter == 'unread' %}selected{% endif %}>Unread</option>
                <option value="read" {% if currentFilter == 'read' %}selected{% endif %}>Read</option>
                <option value="today" {% if currentFilter == 'today' %}selected{% endif %}>Today</option>
                <option value="week" {% if currentFilter == 'week' %}selected{% endif %}>This Week</option>
            </select>
            <button id="mark-all-read" class="secondary-button" onclick="markAllAsRead()">
                <i class="ti ti-check"></i> Mark All as Read
            </button>
            <div style="flex-grow: 1;"></div>
            <button class="primary-button" onclick="window.location.reload()">
                <i class="ti ti-refresh"></i> Refresh
            </button>
        </div>

        <!-- Notifications List -->
        <div id="notifications-container">
            {% if notifications is empty %}
                <div class="empty-state">
                    <i class="ti ti-bell-off"></i>
                    <h3>No notifications found</h3>
                    <p>You don't have any notifications at the moment.</p>
                </div>
            {% else %}
                {% for notification in notifications %}
                    <div class="notification-card {% if notification.statut == 'NON_LU' %}unread{% endif %}" style="--index: {{ loop.index }}">
                        <div class="notification-header">
                            <span class="notification-username">
                                {% if notification.utilisateur %}
                                    {{ notification.utilisateur.nom }} {{ notification.utilisateur.prenom }}
                                {% else %}
                                    Unknown User
                                {% endif %}
                            </span>
                            <span class="notification-time" title="{{ notification.dateCreation|date('Y-m-d H:i:s') }}">
                                {% if notification.dateCreation|date('Y-m-d') == 'now'|date('Y-m-d') %}
                                    Today {{ notification.dateCreation|date('H:i') }}
                                {% elseif notification.dateCreation|date('Y-m-d') == 'now'|date_modify('-1 day')|date('Y-m-d') %}
                                    Yesterday {{ notification.dateCreation|date('H:i') }}
                                {% else %}
                                    {{ notification.dateCreation|date('d M, H:i') }}
                                {% endif %}
                            </span>
                        </div>
                        <div class="notification-message">{{ notification.message }}</div>
                        <div class="notification-actions">
                            <button class="action-button" onclick="window.location.href='{{ path("admin_notifications_view", {id: notification.id}) }}'">
                                <i class="ti ti-eye"></i> View
                            </button>
                            <button class="delete-button" onclick="deleteNotification({{ notification.id }})">
                                <i class="ti ti-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                {% endfor %}
            {% endif %}
        </div>
    </div>

    <!-- Core JS -->
    <script src="{{ asset('vendor/libs/jquery/jquery.js') }}"></script>
    <script src="{{ asset('vendor/libs/popper/popper.js') }}"></script>
    <script src="{{ asset('vendor/js/bootstrap.js') }}"></script>
    <script src="{{ asset('vendor/libs/perfect-scrollbar/perfect-scrollbar.js') }}"></script>
    <script src="{{ asset('vendor/libs/node-waves/node-waves.js') }}"></script>
    <script src="{{ asset('vendor/libs/sweetalert2/sweetalert2.js') }}"></script>
    <script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>

    <script>
        // Initialize AOS animations
        AOS.init();

        // Mark all notifications as read
        function markAllAsRead() {
            alert('Mark all as read clicked');
        }

        // View notification
        function viewNotification(id) {
            alert('View notification ' + id + ' clicked');
        }

        // Delete notification
        function deleteNotification(id) {
            if (confirm('Are you sure you want to delete this notification?')) {
                alert('Delete notification ' + id + ' clicked');
            }
        }

        // Check for new notifications every 30 seconds
        setInterval(() => {
            alert('Checking for new notifications...');
        }, 30000);

        // Add hover effects to notification cards
        document.querySelectorAll('.notification-card').forEach(card => {
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-3px)';
                card.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.08)';
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = '';
                card.style.boxShadow = '';
            });
        });
    </script>
</body>
</html>