{% if error %}
<div class="alert alert-danger animate__animated animate__fadeIn mb-3">
    <i class="ti ti-alert-circle me-2"></i> {{ error }}
</div>
{% endif %}

{% if personnels|length > 0 %}
<div class="row gy-5">
    {% for personnel in personnels %}
    <div class="col-md-6 col-lg-6 col-xl-4">
        <div class="personnel-item style2">
            <div class="personnel-item_img">
                <img src="{{ asset('uploads/personnel/' ~ personnel.imageUrl|default('default-personnel.jpg')) }}" 
                     alt="{{ personnel.nomP }} {{ personnel.prenomP }}">
                {% if personnel.tarifP > 100 %}
                <span class="premium-badge">PREMIUM</span>
                {% endif %}
                <span class="service-badge">{{ personnel.serviceP|upper }}</span>
            </div>
            <h3 class="personnel-item_title">
                {{ personnel.nomP }} {{ personnel.prenomP }}
            </h3>
            <p class="personnel-item_subtitle">{{ personnel.tarifP|number_format(2, '.', ',') }} TND/jour</p>
            
            <div class="personnel-item_feature">
                <span><i class="fas fa-hands-helping" style="width: 20px; text-align: center;"></i> Service</span>
                <span class="personnel-item_info">{{ personnel.serviceP }}</span>
            </div>
            <div class="personnel-item_feature">
                <span><i class="far fa-calendar-check" style="width: 20px; text-align: center;"></i> Disponibilité</span>
                <span class="personnel-item_info">{{ personnel.statutP }}</span>
            </div>
            <div class="personnel-item_feature">
                <span><i class="fas fa-language" style="width: 20px; text-align: center;"></i> Langues</span>
                <span class="personnel-item_info">{{ personnel.languesP ?? 'FR, EN' }}</span>
            </div>
            
            <div class="d-flex justify-content-center mt-3">
                {% set isReserved = false %}
                {% set reservationId = null %}
                
                {% for reservation in reservations %}
                {% if reservation.idP == personnel.idP and reservation.event.id == selectedEventId %}
                    {% set isReserved = true %}
                    {% set reservationId = reservation.idR %}
                {% endif %}
                {% endfor %}
                
                {% if isReserved %}
                <form method="post" action="{{ path('app_reservation_perso_delete', {'idR': reservationId}) }}" class="w-100" id="cancelForm-{{ reservationId }}">
                    <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ reservationId) }}">
                    <input type="hidden" name="event_id" value="{{ selectedEventId }}">
                    <button class="th-btn fw-btn cancel-btn"
                            style="background-color: #dc3545; border-color: #dc3545;"
                            data-reservation-id="{{ reservationId }}"
                            title="Annuler cette réservation">
                        <i class="fa-regular fa-calendar-xmark me-2"></i>Annuler
                    </button>
                </form>
                {% else %}
                    <button class="th-btn fw-btn reserve-btn" 
                            data-personnel-id="{{ personnel.idP }}"
                            title="Réserver ce personnel">
                        <i class="fa-regular fa-calendar-plus me-2"></i>Réserver
                    </button>
                {% endif %}
            </div>
        </div>
    </div>
    {% endfor %}
</div>
{% elseif not error %}
<div class="no-results-card animate__animated animate__fadeIn">
    <div class="avatar avatar-xl bg-light-secondary rounded-circle mb-3 mx-auto">
        <i class="ti ti-search-off text-secondary"></i>
    </div>
    <h5 class="mb-2">Aucun résultat trouvé</h5>
    <p class="text-muted mb-3">Essayez avec d'autres termes de recherche</p>
    <button class="btn btn-sm btn-outline-primary" id="resetFromResults">
        <i class="ti ti-arrow-back-up me-1"></i> Réinitialiser la recherche
    </button>
</div>
{% endif %}

<script>
// Permet de réinitialiser depuis les résultats si aucun n'a été trouvé
document.getElementById('resetFromResults')?.addEventListener('click', function() {
    document.getElementById('searchInput').value = '';
    document.getElementById('searchResults').innerHTML = '';
    document.querySelector('.row.gy-5').style.display = 'block';
    document.getElementById('resetSearch').style.display = 'none';
    document.getElementById('searchStatus').textContent = '';
});

// Réattache les événements aux boutons après le chargement des résultats
document.querySelectorAll('.reserve-btn').forEach(button => {
    button.addEventListener('click', function() {
        const personnelId = this.getAttribute('data-personnel-id');
        const selectedEventId = document.getElementById('event-select')?.value;
        
        if (!selectedEventId) {
            const toast = new bootstrap.Toast(document.getElementById('errorToast'));
            document.getElementById('toastMessage').textContent = 'Veuillez sélectionner un événement';
            toast.show();
            return;
        }
        
        const confirmation = confirm(`Confirmez-vous la réservation de ce personnel pour l'événement sélectionné ?`);
        
        if (confirmation) {
            window.location.href = `/reservationn/perso/new/${personnelId}/${selectedEventId}`;
        }
    });
});

document.querySelectorAll('.cancel-btn').forEach(button => {
    button.addEventListener('click', async function(e) {
        e.preventDefault();
        const reservationId = this.getAttribute('data-reservation-id');
        const form = document.getElementById(`cancelForm-${reservationId}`);
        const selectedEventId = document.getElementById('event-select')?.value;
        
        try {
            this.innerHTML = '<i class="fa-solid fa-spinner fa-spin me-2"></i> Vérification...';
            
            const response = await fetch(`/reservationn/perso/check-cancel/${reservationId}/${selectedEventId}`);
            
            if (!response.ok) {
                throw new Error('Erreur réseau');
            }
            
            const data = await response.json();
            
            this.innerHTML = '<i class="fa-regular fa-calendar-xmark me-2"></i> Annuler';
            
            if (data.canCancel) {
                if (confirm('Êtes-vous sûr de vouloir annuler cette réservation ?')) {
                    form.submit();
                }
            } else {
                const alertModal = new bootstrap.Modal(document.getElementById('cancelAlertModal'));
                const alertMessage = document.getElementById('cancelAlertMessage');
                
                if (data.reason === 'soon') {
                    alertMessage.textContent = 'Impossible d\'annuler : l\'événement commence dans moins de 24h.';
                } else {
                    alertMessage.textContent = 'Impossible d\'annuler cette réservation.';
                }
                
                alertModal.show();
            }
        } catch (error) {
            console.error('Erreur lors de la vérification:', error);
            this.innerHTML = '<i class="fa-regular fa-calendar-xmark me-2"></i> Annuler';
            
            const toast = new bootstrap.Toast(document.getElementById('errorToast'));
            document.getElementById('toastMessage').textContent = 'Une erreur est survenue lors de la vérification';
            toast.show();
        }
    });
});
</script>